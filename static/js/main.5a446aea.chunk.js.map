{"version":3,"sources":["assets sync nonrecursive //.(png|jpe?g|svg)$","assets/aag-laga-de.jpg","assets/ankon-bath.jpg","assets/breaks.jpg","assets/eating-chips.jpg","assets/ganesh-sir-is-coming.jpg","assets/hehe-hoho.jpg","assets/if-else-shubham.jpg","assets/jayanth-said-so.jpg","assets/meme.jpg","assets/saturday-movie.jpg","assets/tdd-tw.jpg","assets/tea-coffee-juice.jpg","Components/Card.jsx","Components/Gallery.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Header","styled","div","ImageContainer","Image","img","Footer","CardContainer","Card","props","href","image","imageUrl","src","GalleryContainer","Gallery","rows","images","index","key","r","allImages","require","user","tags","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yLAAA,IAAIA,EAAM,CACT,oBAAqB,GACrB,mBAAoB,GACpB,eAAgB,GAChB,qBAAsB,GACtB,6BAA8B,GAC9B,kBAAmB,GACnB,wBAAyB,GACzB,wBAAyB,GACzB,aAAc,GACd,uBAAwB,GACxB,eAAgB,GAChB,yBAA0B,IAI3B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBCjCpBU,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,4hCCI3C,IAAMC,EAASC,IAAOC,IAAV,KAUNC,EAAiBF,IAAOC,IAAV,KAOdE,EAAQH,IAAOI,IAAV,KAMLC,EAASL,IAAOC,IAAV,KAQNK,EAAgBN,IAAOC,IAAV,KA6BJM,EAlBF,SAAAC,GACT,OACI,kBAACF,EAAD,KACI,kBAACP,EAAD,MAGA,kBAACG,EAAD,KACI,uBAAGO,KAAMD,EAAME,MAAMC,UACjB,kBAACR,EAAD,CAAOS,IAAKJ,EAAME,MAAMC,aAGhC,kBAACN,EAAD,Q,wQCrDZ,IAAMQ,EAAmBb,IAAOC,IAAV,KAuBPa,EAPC,SAAAN,GACZ,IAAIO,EAAOP,EAAMQ,OAAOhC,KAAI,SAAC0B,EAAOO,GAAR,OACxB,kBAAC,EAAD,CAAMP,MAAOA,EAAOQ,IAAKD,OAE7B,OAAO,kBAACJ,EAAD,KAAmBE,I,+cCT9B,IAVmBI,EAUbC,GAVaD,EAUgBE,MAT1BF,EAAEzB,OAAOV,IAAImC,GAINnC,KAAK,SAAA2B,GACjB,MAAO,CAAEW,KAAM,aAAWC,KAAM,OAAQZ,SAAUA,OAMhDZ,EAASC,IAAOC,IAAV,KASNI,EAASL,IAAOC,IAAV,KAmBGuB,MAVf,WACE,OACE,oCACE,kBAAC,EAAD,qBACA,kBAAC,EAAD,CAASR,OAAQI,IACjB,kBAAC,EAAD,oBC5BcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5a446aea.chunk.js","sourcesContent":["var map = {\n\t\"./aag-laga-de.jpg\": 25,\n\t\"./ankon-bath.jpg\": 26,\n\t\"./breaks.jpg\": 27,\n\t\"./eating-chips.jpg\": 28,\n\t\"./ganesh-sir-is-coming.jpg\": 29,\n\t\"./hehe-hoho.jpg\": 30,\n\t\"./if-else-shubham.jpg\": 31,\n\t\"./jayanth-said-so.jpg\": 32,\n\t\"./meme.jpg\": 33,\n\t\"./saturday-movie.jpg\": 34,\n\t\"./tdd-tw.jpg\": 35,\n\t\"./tea-coffee-juice.jpg\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 24;","module.exports = __webpack_public_path__ + \"static/media/aag-laga-de.63f4ba0e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ankon-bath.8dbc7f2c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/breaks.3d706c90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eating-chips.c222c686.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ganesh-sir-is-coming.dfdb5db7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hehe-hoho.94da6961.jpg\";","module.exports = __webpack_public_path__ + \"static/media/if-else-shubham.9bddf84d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jayanth-said-so.7ce9c5eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme.1c66ca43.jpg\";","module.exports = __webpack_public_path__ + \"static/media/saturday-movie.c7bb84af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tdd-tw.05c5f94c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tea-coffee-juice.d04f0bf1.jpg\";","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n//   border-bottom: 1px solid lightgray;\n  padding-bottom: 10px;\n  padding-top: 10px;\n  padding: 10px;\n`;\n\nconst ImageContainer = styled.div`\n  height: 240px;\n  width: 290px;\n  margin: 0 auto;\n  overflow:hidden;\n`;\n\nconst Image = styled.img`\nheight: 240px;\nwidth: 100%;\n`;\n\n\nconst Footer = styled.div`\n//   border-top: 1px solid lightgray;\n  font-size: 14px;\n  font-weight: 300;\n  padding: 10px;\n  overflow: hidden;\n`;\n\nconst CardContainer = styled.div`\n  width: 300px;\n  margin-right:10px;\n  border-radius:1%;\n  border: 1px solid gray;\n//   box-shadow: 0px 5px 18px -5px rgba(0,0,0,0.88);\n  &:last-child {\n    margin-right: 0px;\n  }\n`;\n\nconst Card = props => {\n    return (\n        <CardContainer>\n            <Header>\n                {/* {props.image.user} */}\n            </Header>\n            <ImageContainer>\n                <a href={props.image.imageUrl}>\n                    <Image src={props.image.imageUrl} />\n                </a>\n            </ImageContainer>\n            <Footer>\n                {/* {props.image.tags}  */}\n            </Footer>\n        </CardContainer>\n    );\n}\n\nexport default Card;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Card from \"./Card\"\n\nconst GalleryContainer = styled.div`\n  display: flex;\n  justify-content: center\n  width: 960px;\n  flex-wrap:wrap;\n  margin: 0 auto\n\n  & > * {\n    margin-bottom: 30px;\n  }\n\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n\nconst Gallery = props => {\n    let rows = props.images.map((image, index) => (\n        <Card image={image} key={index} />\n    ));\n    return <GalleryContainer>{rows}</GalleryContainer>;\n};\n\nexport default Gallery;","import React from 'react';\nimport './App.css';\nimport Gallery from './Components/Gallery';\nimport styled from 'styled-components';\n\nfunction importAll(r) {\n  return r.keys().map(r);\n}\n\nfunction format(images) {\n  return images.map((imageUrl => {\n    return { user: \"Â©Tushar\", tags: \"#fun\", imageUrl: imageUrl }\n  }))\n}\n\nconst allImages = format(importAll(require.context('./assets/', false, /\\.(png|jpe?g|svg)$/)));\n\nconst Header = styled.div`\n  width: 960px;\n  font-size:40px;\n  text-align:center;\n  margin:10px auto;\n  font-family: 'Permanent Marker', cursive;\n  border-bottom:2px solid black;\n`;\n\nconst Footer = styled.div`\n  width: 960px;\n  font-size:17px;\n  margin:10px auto;\n  text-align:right;\n  // font-family: 'Permanent Marker', cursive;\n  // border-bottom:2px solid black;\n`;\n\nfunction App() {\n  return (\n    <>\n      <Header>STEP-6 MEMES</Header>\n      <Gallery images={allImages} ></ Gallery>\n      <Footer>By Tushar</Footer>\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}